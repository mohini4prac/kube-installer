---
- name: "Install Kubernetes on master node"
  hosts: master
  tasks:
  #Check if port 6443 is occupied
  - name: Check if required ports are open
    wait_for:
      host: "{{ item.name }}"
      port: "{{ item.port }}"
      state: absent         # Port is not occupied
      delay: 0               # No wait before first check (sec)
      timeout: 3             # Stop checking after timeout (sec)
    ignore_errors: yes
    with_items:
      - name: "master"
        port: 6443 #Kubernetes API server
      - name: "master"
        port: 2379 #etcd server client API
      - name: "master"
        port: 2380 #etcd server client API
      - name: "master"
        port: 10250 #Kubelet API on master
      - name: "worker"
        port: 10250 #Kubelet API on worker
      - name: "master"
        port: 10259 #kube-scheduler
      - name: "master"
        port: 10257 #kube-controller-manager
  - name: "Remove older versions of container runtimes"
    apt:
      name:
        - docker
        - docker-engine
        - docker.io
        - containerd
        - runc
      state: absent
  - name: "Install ca-certificates,curl,gnupg,lsb-release"
    apt:
      name:
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
      state: present
      update_cache: yes
  - name: "Create directory for docker repo"
    file:
      path: /etc/apt/keyrings
      state: directory

  - name: Add Docker official GPG key
    get_url:
      url: https://download.docker.com/linux/ubuntu/gpg
      dest: /etc/apt/keyrings/docker.gpg
      mode: '0644'
      force: no

  - name: Get ubuntu release
    shell: lsb_release -cs
    register: lsb_release
  - name: Print  ubuntu release
    debug:
      msg : "{{ lsb_release }}"
  - name: Setup docker repository
    apt_repository:
      filename: docker
      repo: 'deb [signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ lsb_release }} stable'